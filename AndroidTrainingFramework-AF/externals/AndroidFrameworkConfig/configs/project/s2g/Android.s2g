<?xml version="1.0" encoding="utf-8"?>

<!-- Help/Docs/Info: https://docs.gameloft.org/sln2gcc-compile-utility-tool/ -->


  	 <Project>
        <Macro Name="USE_SPECIFIC_OUTPUT_NAME" Value="$(SO_LIB_FILE)"/>
        
        <!--USE_ADDITIONAL_INCLUDE_DIRECTORIES_FROM_VS: Optional and if it is missing the default value it is 'true'.
                                                        This it is used if you want, or not, to add the 
                                                        'VisualStudio Project'> 'Properties' > 'C/C++' > 'General' > 'Additional Include Directories'  
                                                        to INCLUDE_PATHS -->
        <Macro Name="USE_ADDITIONAL_INCLUDE_DIRECTORIES_FROM_VS" Value="true" />

        <Macro Name="USE_EXCLUDEFROMBUILD_VS_FLAG" Value="false" />

        <Macro Name="USE_PCH_FILE" Value="" />
        <Macro Name="USE_PCH_FILE_AS" Value="c++-header" />

    
        <!--INCLUDE_PATHS:     Specify the paths where the headers are searched 
                    Do not use paths with space in it.
                    Separators: ';' space or new line -->                            
        <Macro Name="INCLUDE_PATHS" Value=" ../../src/
											../../src/platform/android
											../../externals/AndroidFramework/native
											../../externals/AndroidFrameworkConfig/configs/generated
											../../externals/AndroidFrameworkConfig/configs/project
											../../externals/AndroidFramework/native/GameUtils " />
                                            
        <!--LINK_PATHS: Specify the paths where the to search the libraries specified in LDLIBS
                        Do not use paths with space in it.
                        Separators: ';' space or new line -->                                                        
            <Macro Name="LINK_PATHS" Value="$(ANDROID_NDK_PATH)\samples\native-activity\obj\local\armeabi\
                                            ..\..\ALicenseCheck\dist\bin\gnustl_static\armeabi-v7a\release\" />
        
        <!--CFLAGS: this is mandatory and it is very important. You can see here CommonValue, DebugValue and ReleaseValue. 
                    The CFLAGS for <Project> will be calculated like this:
                        for release:      CFLAGS = CommonValue + ReleaseValue 
                        for debug:        CFLAGS = CommonValue + DebugValue -->              
        <Macro Name="DEFINES" CommonValue="" DebugValue="DEBUG;_DEBUG;" ReleaseValue=""/>
        
        <!--LDLIBS: Here you can specify the static libraryes that you need use at linking step. You have to use the Gcc naming convention.
                    For example: -lstdc++  means that you want to use libstdc++.a library file
                    Separators: ';' space or new line -->                                    
        <Macro Name="LDLIBS" Value="-lGameSpecific" />
                                    
                <!-- LDLIBS that may be added later: -lManhattan -llibprotobuf -llibprotoc -llzma_lib -->
        
        <!--LDFLAGS: Gcc standard linker flags used to create *.so files
                     Separators: ';' space or new line -->        
        <Macro Name="LDFLAGS" Value="" />
        
        <!--CFLAGS: this is mandatory and it is very important. You can see here CommonValue, DebugValue and ReleaseValue. 
                    The CFLAGS for <Project> will be calculated like this:
                     for release:      CFLAGS = CommonValue + ReleaseValue 
                     for debug:        CFLAGS = CommonValue + DebugValue -->              
        <Macro Name="CFLAGS" Value="-g -Wall -Wextra -pthread" />

        <!-- use AddSourceFileToProject  if you want to add special files to this project -->
        <AddSourceFileToProject>
           <File Name="$(ANDROID_NDK_PATH)\sources\android\cpufeatures\cpu-features.c"/>            
        </AddSourceFileToProject>


        <!-- use FileSpecific if you want add specific compile flags for a source file -->        
        <FileSpecific>
            <File Name="" CFLAGS=""/>
            <File Name="" CFLAGS=""/>
        </FileSpecific>
        
        <!--MSVCConfiguration:  Here you must specify the configuration used for release and debug.
                                You can choose one of the configuration declared in 
                                VisualStudio 'Project' > 'Propreties' > 'Configuration Properties' > 'Configuration Manager...' > 'Configuration' column  -->
        <MSVCConfiguration Debug="Debug" Release="Release"/>

        <!--Ignore: you can specify some file that will be ignored. You can specify the file with or without extension -->
        <Ignore>		
            <File Name="dummy_main" />
        </Ignore>
        
        <!-- AutoGenerated: It is used to speed up the compileation. To enable this you have to specify the number of UnityBuids. Example UnityBuildsNumber="4" .
                                      If UnityBuildsNumber="0" the AutoGenerated will be disabled.
                                      Unity Buids it is the same thing with Compile Units!
                                      This system works like that: the sln2gcc.exe will create some cpp files. In that files you will find all the source files from your project included like 
                                        headers (Ex: #include "c:\path_to_project\src\stdafx.cpp"). So, instead to compile 450 files from your project will be compiled only 4 files. The compile time 
                                        will decrease to 30%. The down side of this it is that not all the CompileUnits(i mean UnityBuids) can be compiled because of the structure of your project. In this case
                                        all the files from that CompileUnit will be compiled as stand alone file. 
                                      You can exclude some file from CompileUnits using  ExcludeFileFromUnityBuild node. Here you can use the file name of the file (including extension) but without path. Also
                                        you can exclude all files with an extension by using *. (Ex: <ExcludeFileFromUnityBuild Name="*.cpp" />) .
                                      -->
        <UnityBuilds>									  
            <AutoGenerated UnityBuildsNumber="0" >	
                  <ExcludeFileFromUnityBuild Name="insert_here_the_filename_withowt_path" />
            </AutoGenerated>	
        </UnityBuilds>	

		
	</Project>